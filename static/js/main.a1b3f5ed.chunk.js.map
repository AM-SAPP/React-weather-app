{"version":3,"sources":["component/Form.jsx","actions/index.js","component/ToogleTheme.jsx","component/WeatherCard.jsx","App.js","reducers/themeReducer.js","reducers/index.js","reducers/placeReducer.js","reducers/placeDataReducer.js","store.js","index.js"],"names":["Form","place","useSelector","state","theme","dispatch","useDispatch","className","type","placeholder","value","onChange","e","payload","updatePlace","target","onClick","fetch","then","res","json","data","console","log","updatePlaceData","ThemeToogle","WeatherCard","placeData","location","src","current","condition","icon","alt","temp_c","text","name","wind_kph","humidity","precip_in","App","themeReducer","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1b3f5ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updatePlace, updatePlaceData } from \"../actions\";\r\nexport default function Form() {\r\n  const place = useSelector((state) => state.place);\r\n  const theme = useSelector(state => state.theme);\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 form dark\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter City\"\r\n            value={place}\r\n            onChange={(e) => {\r\n              dispatch(updatePlace(e.target.value));\r\n            }}\r\n          />\r\n          <button\r\n            className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\r\n\r\n            onClick={() => {\r\n              dispatch(updatePlaceData(place));\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const updatePlace = (place) => {\r\n  return {\r\n    type: \"UPDATE_PLACE\",\r\n    payload: place,\r\n  };\r\n};\r\n\r\nconst updatePlaceData = (place) => {\r\n  return (dispatch) => {\r\n    fetch(`http://api.weatherapi.com/v1/current.json?key=fcfb185f3c6f4fb4829143316212707&q=${place}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n          console.log(data);\r\n        dispatch({\r\n            type: \"UPDATE_PLACE_DATA\",\r\n            payload: data\r\n        })\r\n    });\r\n  };\r\n};\r\n\r\nconst toogleTheme = ()=>{\r\n    return {\r\n        type: \"TOOGLE_THEME\"\r\n    }\r\n}\r\n\r\nexport { updatePlaceData, updatePlace ,toogleTheme};\r\n\r\n// {\r\n//     type: \"UPDATE_PLACE_DATA\",\r\n//     payload: place\r\n// }\r\n","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { toogleTheme } from '../actions';\r\n\r\nexport default function ThemeToogle() {\r\n    const theme = useSelector(state => state.theme);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"toogle-theme\">\r\n            <button className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\r\n                onClick={()=>{\r\n                    dispatch(toogleTheme());    \r\n                }}\r\n            >\r\n                {theme ? \"Dark\" : \"Light\"}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function WeatherCard() {\r\n  const placeData = useSelector(state=>state.placeData);\r\n  const theme = useSelector(state => state.theme);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 offset-md-4 weather\">\r\n          <div className={theme ? \"card dark\" : \"card\"}>\r\n            {placeData.location ? (\r\n              <div>\r\n                <img src={placeData.current.condition.icon} alt=\"\" />\r\n                <div className=\"temp\">{placeData.current.temp_c}&deg;</div>\r\n                <div className=\"condition\">\r\n                  {placeData.current.condition.text}\r\n                </div>\r\n                <div>\r\n                  <h2>{placeData.location.name}</h2>\r\n                </div>\r\n                <div className=\"container\">\r\n                  <div className=\"row whp\">\r\n                    <div className=\"col-4\">\r\n                      <div className=\"title\">Wind Now</div>\r\n                      <div className=\"data\">\r\n                        {placeData.current.wind_kph}\r\n                        <span className=\"unit\">KM</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      <div className=\"title\">Humidity</div>\r\n                      <div className=\"data\">\r\n                        {placeData.current.humidity}\r\n                        <span className=\"unit\">%</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      <div className=\"title\">Percipitation</div>\r\n                      <div className=\"data\">\r\n                        {placeData.current.precip_in}\r\n                        <span className=\"unit\">%</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <h2>Place not Found</h2>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Form from \"./component/Form\";\nimport ThemeToogle from \"./component/ToogleTheme\";\nimport WeatherCard from \"./component/WeatherCard\";\nimport { useSelector } from \"react-redux\";\nfunction App() {\n  const theme = useSelector(state => state.theme)\n  return (\n    <div className={theme ? \"App dark\" : \"App\"}>\n      <ThemeToogle/>\n      <Form/>\n      <WeatherCard/>\n    </div>\n  );\n}\n\nexport default App;\n","const themeReducer = (state = false,action)=>{\r\n    if(action.type === \"TOOGLE_THEME\"){\r\n        return !state;\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nexport default themeReducer;","import {combineReducers} from 'redux'\r\nimport { placeDataReducer } from './placeDataReducer'\r\nimport { placeReducer } from './placeReducer'\r\nimport themeReducer from './themeReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    place: placeReducer,\r\n    placeData: placeDataReducer,\r\n    theme: themeReducer\r\n});\r\n\r\nexport default rootReducer;","export const placeReducer = (state = \"\",action)=>{\r\n    if(action.type === \"UPDATE_PLACE\"){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}\r\n","export const placeDataReducer = (state = {} , action)=>{\r\n    if(action.type === \"UPDATE_PLACE_DATA\"){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","import { createStore ,applyMiddleware} from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from 'redux-thunk';\r\nconst store = createStore(rootReducer,applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}